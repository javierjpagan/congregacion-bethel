{"version":3,"sources":["components/navbar/index.js","components/pages/inicio/index.js","components/pages/servicios/index.js","components/pages/contactanos/index.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","data-aos","href","Component","Inicio","data-stellar-background-ratio","src","Servicios","Contactanos","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wYAyBgBA,G,6LApBR,OAEI,yBAAKC,UAAU,iDACf,yBAAKA,UAAU,uBAAuBC,WAAS,QAC/C,yBAAKD,UAAU,eACC,4BAAI,uBAAGE,KAAK,KAAR,WACJ,4BAAI,uBAAGA,KAAK,cAAR,iBACJ,4BAAI,uBAAGA,KAAK,cAAR,yBACJ,4BAAI,uBAAGA,KAAK,cAAR,cACJ,4BAAI,uBAAGA,KAAK,gBAAR,0B,GAXXC,cCCAC,G,uLAEb,OACI,yBAAKJ,UAAU,oBAAoBC,WAAS,OAAOI,gCAA8B,OAClE,yBAAKL,UAAU,iDAC1B,yBAAKA,UAAU,uBAAuBC,WAAS,QAClD,yBAAKD,UAAU,YAAYM,IAAI,4BAChC,yBAAKN,UAAU,aACT,4BAAI,0EACJ,mE,GATkBG,cCAfI,G,uLAEb,OACI,yBAAKP,UAAU,YACf,yBAAKA,UAAU,iDACf,yBAAKA,UAAU,uBAAuBC,WAAS,QAC/C,yBAAKD,UAAU,YAC3B,4BAAI,4DAKA,yBAAKA,UAAU,YACnB,+BAAWA,UAAU,iBACrB,oEACA,yHAIA,+BAAWA,UAAU,iBACrB,oDACA,wHACA,4CACA,sFAIA,+BAAWA,UAAU,iBACrB,wGAGA,+BAAWA,UAAU,iBACrB,6GAGA,+BAAWA,UAAU,iBACrB,kH,GApCuCG,cCgCvBK,G,uLA/BR,OAKR,yBAAKR,UAAU,YACH,yBAAKA,UAAU,iDACf,yBAAKA,UAAU,uBAAuBC,WAAS,QAC/C,yBAAKD,UAAU,YAC3B,4BAAI,qDAKJ,kGAEA,8KAGA,wGAEA,2DAEA,sE,GAzB0BG,cC0BXM,E,iLAjBb,OACE,kBAAC,IAAD,KACA,6BACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWR,IACjC,kBAAC,IAAD,CAAOO,KAAK,aAAaC,UAAWL,IACpC,kBAAC,IAAD,CAAOI,KAAK,eAAeC,UAAWJ,W,GATxBL,aCEEU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ebd54021.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport './style.css';\n\nclass Navbar extends Component {\n    render() {\n        return(\n\n            <div className=\"row align-items-center justify-content-center\">\n            <div className=\"col-md-7 text-center\" data-aos=\"fade\">\n            <div className=\"main-navbar\">\n                            <li><a href=\"/\">Inicio</a></li>\n                            <li><a href=\"/conocenos\">Conócenos</a></li>\n                            <li><a href=\"/servicios\">Servicios & Horarios</a></li>\n                            <li><a href=\"/donativos\">Donativos</a></li>\n                            <li><a href=\"/contactanos\">Contáctanos</a></li>\n                        </div>\n                        </div>\n                        </div>\n\n\n\n        )\n    }\n}\n\nexport default (Navbar);","import React, { Component } from \"react\";\nimport './style.css';\n\n\nexport default class Inicio extends Component {\n    render() {\n        return(\n            <div className=\"site-blocks-cover\" data-aos=\"fade\" data-stellar-background-ratio=\"0.5\">\n                           <div className=\"row align-items-center justify-content-center\">\n                <div className=\"col-md-7 text-center\" data-aos=\"fade\">\n             <img className=\"logo-home\" src=\"/images/logo-bethel.jpg\"></img>\n            <div className=\"container\">\n                  <h1><strong>CONGREGACIÓN MERSIÁNICA BETH-EL</strong></h1>\n                  <h1>(Kehilah Mashiajit Beth-El)</h1>\n                </div>\n              </div>\n            </div>\n          </div>  \n\n        )\n    }\n}\n\n","import React, { Component } from \"react\";\r\nimport './style.css';\r\n\r\n\r\nexport default class Servicios extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"ServBody\">\r\n            <div className=\"row align-items-center justify-content-center\">\r\n            <div className=\"col-md-7 text-center\" data-aos=\"fade\">\r\n            <div className=\"ServHead\">\r\n<h3><strong>SERVICIOS & HORARIOS</strong></h3>\r\n            </div>\r\n            </div>\r\n                        </div>\r\n\r\n    <div className=\"ServText\">      \r\n<container className=\"ContainerText\">\r\n<h1>Erev Shabbat (Víspera de Shabbat)</h1>\r\n<h2>✡ Kabalat Shabbat (Recibimiento del Shabbat) - en los hogares a la caída del sol</h2>\r\n</container>\r\n\r\n \r\n<container className=\"ContainerText\">\r\n<h1>Servicio de Shabbat </h1> \r\n<h2>✡ Shajarit y Servicio de Toráh – 10:30 a.m. – 2:00 pm aproximadamente </h2>\r\n<h2>✡ Oneg </h2>\r\n<h2>✡ Estudio de Mandamientos o Fiestas Bíblicas </h2>\r\n</container>\r\n\r\n \r\n<container className=\"ContainerText\">\r\n<h1>Clases de Raíces Hebreas o Lenguaje Hebreo – jueves, 7:30 p.m. </h1>\r\n</container>\r\n\r\n<container className=\"ContainerText\">\r\n<h1>Servicio de Rosh Jódesh – conforme al avistamiento de la Luna Nueva </h1>\r\n</container>\r\n\r\n<container className=\"ContainerText\">\r\n<h1>Celebración de Fiestas Bíblicas – conforme al calendario hebreo </h1>\r\n</container>\r\n</div>  \r\n</div>\r\n\r\n                        \r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport './style.css';\r\n\r\nclass Contactanos extends Component {\r\n    render() {\r\n        return(\r\n\r\n\r\n\r\n\r\n<div className=\"ContBody\">\r\n            <div className=\"row align-items-center justify-content-center\">\r\n            <div className=\"col-md-7 text-center\" data-aos=\"fade\">\r\n            <div className=\"ContHead\">\r\n<h2><strong>CONTÁCTANOS</strong></h2>\r\n</div>\r\n            </div>\r\n            \r\n\r\n<h2>Dirección Postal: HC 1 Box 29030 PMB 602, Caguas, PR 00725-8900</h2> \r\n\r\n<h2>{`Dirección Física: Carretera #1 Km. 27.0 (Frente al Parque de Soccer), \r\nSector Quebrada Arenas, Bo. Río Cañas, Caguas, Puerto Rico`}</h2> \r\n\r\n<h2>Conexión con Google Map para que obtengan la dirección para llegar</h2>  \r\n\r\n<h2>Teléfono: (787) 486-3507</h2>   \r\n\r\n<h2>Email: kehilah_beth_el@yahoo.com</h2> \r\n                        </div>\r\n                        </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default (Contactanos);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport './App.css';\n\nimport Navbar from \"./components/navbar/\";\nimport Inicio from \"./components/pages/inicio/\";\nimport Servicios from \"./components/pages/servicios/\"\nimport Contactanos from \"./components/pages/contactanos/\";\n\n\nclass App extends Component {\nrender () {\n  return (\n    <Router>\n    <div>\n    <Navbar />\n    <Switch>\n    <Route exact path=\"/\" component={Inicio} />\n    <Route path=\"/servicios\" component={Servicios} />\n    <Route path=\"/contactanos\" component={Contactanos} />\n    </Switch>\n\n    </div>\n    </Router>\n  )\n}\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}